{"version":3,"sources":["../../src/recurrent/rnn-time-step.js"],"names":["RNNTimeStep","model","input","RandomMatrix","inputSize","outputSize","lastHiddenSize","hiddenLayers","length","outputConnector","output","Matrix","layers","equation","Equation","outputs","equationConnection","equationConnections","initialLayerInputs","getEquation","push","i","max","add","multiply","equations","runs","errorSum","bindEquation","inputIndex","current","next","runInput","weights","error","Math","abs","deltas","totalCost","runBackpropagate","isRunnable","lastOutput","outputMatrix","states","jsonString","JSON","stringify","toJSON","matrixOrigin","m","stateIndex","state","j","previousConnectionIndex","left","rows","columns","right","product","Error","connection","indexOf","matrixToString","hiddenLayer","p","hasOwnProperty","toInner","fnString","toString","split","shift","join","pop","replace","fileName","fnName","value","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","forwardFn","name","src","dataFormatter","toFunctionString","formatDataIn","formatDataOut","zeros","softmax","randomF","sampleI","maxI","Function","RNN","defaults","learningRate","decayRate","smoothEps","regc","clipval","trainDefaults"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;AACA;;;;;;;;;;;;IAEqBA,W;;;;;;;;;;;wCACC;AAClB,WAAKC,KAAL,CAAWC,KAAX,GAAmB,IAAIC,sBAAJ,CAAiB,KAAKC,SAAtB,EAAiC,CAAjC,EAAoC,IAApC,CAAnB;AACD;;;yCAEoB;AACnB,UAAIH,QAAQ,KAAKA,KAAjB;AACA,UAAII,aAAa,KAAKA,UAAtB;AACA,UAAIC,iBAAiB,KAAKC,YAAL,CAAkB,KAAKA,YAAL,CAAkBC,MAAlB,GAA2B,CAA7C,CAArB;;AAEA;AACAP,YAAMQ,eAAN,GAAwB,IAAIN,sBAAJ,CAAiBE,UAAjB,EAA6BC,cAA7B,EAA6C,IAA7C,CAAxB;AACA;AACAL,YAAMS,MAAN,GAAe,IAAIC,gBAAJ,CAAWN,UAAX,EAAuB,CAAvB,CAAf;AACD;;;mCAEc;AACb,UAAIJ,QAAQ,KAAKA,KAAjB;AACA,UAAIM,eAAe,KAAKA,YAAxB;AACA,UAAIK,SAASX,MAAMM,YAAnB;AACA,UAAIM,WAAW,IAAIC,kBAAJ,EAAf;AACA,UAAIC,UAAU,EAAd;AACA,UAAIC,qBAAqBf,MAAMgB,mBAAN,CAA0BT,MAA1B,GAAmC,CAAnC,GACrBP,MAAMgB,mBAAN,CAA0BhB,MAAMgB,mBAAN,CAA0BT,MAA1B,GAAmC,CAA7D,CADqB,GAErB,KAAKU,kBAFT;;AAKE;AACF,UAAIR,SAAS,KAAKS,WAAL,CAAiBN,QAAjB,EAA2BA,SAASX,KAAT,CAAeD,MAAMC,KAArB,CAA3B,EAAwDc,mBAAmB,CAAnB,CAAxD,EAA+EJ,OAAO,CAAP,CAA/E,CAAb;AACAG,cAAQK,IAAR,CAAaV,MAAb;AACA;AACA,WAAK,IAAIW,IAAI,CAAR,EAAWC,MAAMf,aAAaC,MAAnC,EAA2Ca,IAAIC,GAA/C,EAAoDD,GAApD,EAAyD;AACvDX,iBAAS,KAAKS,WAAL,CAAiBN,QAAjB,EAA2BH,MAA3B,EAAmCM,mBAAmBK,CAAnB,CAAnC,EAA0DT,OAAOS,CAAP,CAA1D,CAAT;AACAN,gBAAQK,IAAR,CAAaV,MAAb;AACD;;AAEDT,YAAMgB,mBAAN,CAA0BG,IAA1B,CAA+BL,OAA/B;AACAF,eAASU,GAAT,CAAaV,SAASW,QAAT,CAAkBvB,MAAMQ,eAAxB,EAAyCC,MAAzC,CAAb,EAA+DT,MAAMS,MAArE;AACAT,YAAMwB,SAAN,CAAgBL,IAAhB,CAAqBP,QAArB;AACD;;AAED;;;;;;;;6BAKSX,K,EAAO;AACd,WAAKwB,IAAL;AACA,UAAIzB,QAAQ,KAAKA,KAAjB;AACA,UAAI0B,WAAW,CAAf;AACA,UAAId,iBAAJ;AACA,aAAOZ,MAAMwB,SAAN,CAAgBjB,MAAhB,GAAyBN,MAAMM,MAAN,GAAe,CAA/C,EAAkD;AAChD,aAAKoB,YAAL;AACD;AACD,UAAMb,UAAU,EAAhB;;AAEA,UAAI,KAAKX,SAAL,KAAmB,CAAvB,EAA0B;AACxB,aAAK,IAAIyB,aAAa,CAAjB,EAAoBP,MAAMpB,MAAMM,MAAN,GAAe,CAA9C,EAAiDqB,aAAaP,GAA9D,EAAmEO,YAAnE,EAAiF;AAC/E;AACAhB,qBAAWZ,MAAMwB,SAAN,CAAgBI,UAAhB,CAAX;;AAEA,cAAMC,UAAU5B,MAAM2B,UAAN,CAAhB;AACA,cAAME,OAAO7B,MAAM2B,aAAa,CAAnB,CAAb;AACA,cAAMnB,SAASG,SAASmB,QAAT,CAAkB,CAACF,OAAD,CAAlB,CAAf;AACA,eAAK,IAAIT,IAAI,CAAb,EAAgBA,IAAIX,OAAOuB,OAAP,CAAezB,MAAnC,EAA2Ca,GAA3C,EAAgD;AAC9C,gBAAMa,QAAQxB,OAAOuB,OAAP,CAAeZ,CAAf,IAAoBU,IAAlC;AACA;AACAJ,wBAAYQ,KAAKC,GAAL,CAASF,KAAT,CAAZ;;AAEA;AACAxB,mBAAO2B,MAAP,CAAchB,CAAd,IAAmBa,KAAnB;AACAnB,oBAAQK,IAAR,CAAaV,OAAOuB,OAApB;AACD;AACF;AACF,OAlBD,MAkBO;AACL,aAAK,IAAIJ,cAAa,CAAjB,EAAoBP,OAAMpB,MAAMM,MAAN,GAAe,CAA9C,EAAiDqB,cAAaP,IAA9D,EAAmEO,aAAnE,EAAiF;AAC/E;AACAhB,qBAAWZ,MAAMwB,SAAN,CAAgBI,WAAhB,CAAX;;AAEA,cAAMC,WAAU5B,MAAM2B,WAAN,CAAhB;AACA,cAAME,QAAO7B,MAAM2B,cAAa,CAAnB,CAAb;AACA,cAAMnB,UAASG,SAASmB,QAAT,CAAkBF,QAAlB,CAAf;AACA,eAAK,IAAIT,KAAI,CAAb,EAAgBA,KAAIX,QAAOuB,OAAP,CAAezB,MAAnC,EAA2Ca,IAA3C,EAAgD;AAC9C,gBAAMa,SAAQxB,QAAOuB,OAAP,CAAeZ,EAAf,IAAoBU,MAAKV,EAAL,CAAlC;AACA;AACAM,wBAAYQ,KAAKC,GAAL,CAASF,MAAT,CAAZ;;AAEA;AACAxB,oBAAO2B,MAAP,CAAchB,EAAd,IAAmBa,MAAnB;AACAnB,oBAAQK,IAAR,CAAaV,QAAOuB,OAApB;AACD;AACF;AACF;AACD;AACA,WAAKK,SAAL,GAAiBX,QAAjB;AACA,aAAOA,QAAP;AACD;;;uCAEkB;AACjB,WAAK,IAAIN,IAAI,KAAKpB,KAAL,CAAWwB,SAAX,CAAqBjB,MAArB,GAA8B,CAA3C,EAA8Ca,IAAI,CAAC,CAAnD,EAAsDA,GAAtD,EAA2D;AACzD,aAAKpB,KAAL,CAAWwB,SAAX,CAAqBJ,CAArB,EAAwBkB,gBAAxB;AACD;AACF;;AAGD;;;;;;;;0BAKgB;AAAA,UAAZrC,KAAY,uEAAJ,EAAI;;AACd,UAAI,CAAC,KAAKsC,UAAV,EAAsB,OAAO,IAAP;AACtB,UAAMvC,QAAQ,KAAKA,KAAnB;AACA,aAAOA,MAAMwB,SAAN,CAAgBjB,MAAhB,GAAyBN,MAAMM,MAAtC,EAA8C;AAC5C,aAAKoB,YAAL;AACD;AACD,UAAIa,mBAAJ;AACA,UAAI,KAAKrC,SAAL,KAAmB,CAAvB,EAA0B;AACxB,aAAK,IAAIiB,IAAI,CAAb,EAAgBA,IAAInB,MAAMM,MAA1B,EAAkCa,GAAlC,EAAuC;AACrC,cAAIqB,eAAezC,MAAMwB,SAAN,CAAgBJ,CAAhB,EAAmBW,QAAnB,CAA4B,CAAC9B,MAAMmB,CAAN,CAAD,CAA5B,CAAnB;AACAoB,uBAAaC,aAAaT,OAA1B;AACD;AACF,OALD,MAKO;AACL,aAAK,IAAIZ,MAAI,CAAb,EAAgBA,MAAInB,MAAMM,MAA1B,EAAkCa,KAAlC,EAAuC;AACrC,cAAIqB,gBAAezC,MAAMwB,SAAN,CAAgBJ,GAAhB,EAAmBW,QAAnB,CAA4B9B,MAAMmB,GAAN,CAA5B,CAAnB;AACAoB,uBAAaC,cAAaT,OAA1B;AACD;AACF;AACD,UAAI,KAAK5B,UAAL,KAAoB,CAAxB,EAA2B;AACzB,eAAOoC,WAAW,CAAX,CAAP;AACD;AACD,aAAOA,UAAP;AACD;;AAED;;;;;;;iCAIa;AACX,UAAIxC,QAAQ,KAAKA,KAAjB;AACA,UAAIwB,YAAY,KAAKxB,KAAL,CAAWwB,SAA3B;AACA,UAAMrB,YAAY,KAAKA,SAAvB;AACA;AACA,UAAIS,WAAWY,UAAU,CAAV,CAAf;AACA,UAAIkB,SAAS9B,SAAS8B,MAAtB;AACA,UAAIC,aAAaC,KAAKC,SAAL,CAAe,KAAKC,MAAL,EAAf,CAAjB;;AAEA,eAASC,YAAT,CAAsBC,CAAtB,EAAyBC,UAAzB,EAAqC;AACnC,aAAK,IAAI7B,IAAI,CAAR,EAAWC,MAAMqB,OAAOnC,MAA7B,EAAqCa,IAAIC,GAAzC,EAA8CD,GAA9C,EAAmD;AACjD,cAAI8B,QAAQR,OAAOtB,CAAP,CAAZ;;AAEA,cAAIA,MAAM6B,UAAV,EAAsB;AACpB,gBAAIE,IAAIC,wBAAwBJ,CAAxB,CAAR;AACA,oBAAQA,CAAR;AACE,mBAAKE,MAAMG,IAAX;AACE,oBAAIF,IAAI,CAAC,CAAT,EAAY;AACV,gDAA6BA,CAA7B,sCAA+DA,CAA/D,+BAA4FH,EAAEM,IAA9F,UAAyGN,EAAEO,OAA3G;AACD;AACH,mBAAKL,MAAMM,KAAX;AACE,oBAAIL,IAAI,CAAC,CAAT,EAAY;AACV,gDAA6BA,CAA7B,sCAA+DA,CAA/D,+BAA4FH,EAAEM,IAA9F,UAAyGN,EAAEO,OAA3G;AACD;AACH,mBAAKL,MAAMO,OAAX;AACE,uCAAsBT,EAAEM,IAAxB,UAAmCN,EAAEO,OAArC;AACF;AACE,sBAAMG,MAAM,eAAN,CAAN;AAZJ;AAcD;;AAED,cAAIV,MAAME,MAAMO,OAAhB,EAAyB,mBAAkBrC,CAAlB;AACzB,cAAI4B,MAAME,MAAMM,KAAhB,EAAuB,mBAAkBpC,CAAlB;AACvB,cAAI4B,MAAME,MAAMG,IAAhB,EAAsB,mBAAkBjC,CAAlB;AACvB;AACF;;AAED,eAASgC,uBAAT,CAAiCJ,CAAjC,EAAoC;AAClC,YAAMW,aAAa3D,MAAMgB,mBAAN,CAA0B,CAA1B,CAAnB;AACA,YAAM0B,SAASlB,UAAU,CAAV,EAAakB,MAA5B;AACA,aAAK,IAAItB,IAAI,CAAR,EAAWC,MAAMqB,OAAOnC,MAA7B,EAAqCa,IAAIC,GAAzC,EAA8CD,GAA9C,EAAmD;AACjD,cAAIsB,OAAOtB,CAAP,EAAUqC,OAAV,KAAsBT,CAA1B,EAA6B;AAC3B,mBAAO5B,CAAP;AACD;AACF;AACD,eAAOuC,WAAWC,OAAX,CAAmBZ,CAAnB,CAAP;AACD;;AAED,eAASa,cAAT,CAAwBb,CAAxB,EAA2BC,UAA3B,EAAuC;AACrC,YAAI,CAACD,CAAD,IAAM,CAACA,EAAEM,IAAT,IAAiB,CAACN,EAAEO,OAAxB,EAAiC,OAAO,MAAP;;AAEjC,YAAIP,MAAMhD,MAAMC,KAAhB,EAAuB;AACvB,YAAI+C,MAAMhD,MAAMQ,eAAhB,EAAiC;AACjC,YAAIwC,MAAMhD,MAAMS,MAAhB,EAAwB;;AAExB,aAAK,IAAIW,IAAI,CAAR,EAAWC,MAAMrB,MAAMM,YAAN,CAAmBC,MAAzC,EAAiDa,IAAIC,GAArD,EAA0DD,GAA1D,EAA+D;AAC7D,cAAI0C,cAAc9D,MAAMM,YAAN,CAAmBc,CAAnB,CAAlB;AACA,eAAK,IAAI2C,CAAT,IAAcD,WAAd,EAA2B;AACzB,gBAAI,CAACA,YAAYE,cAAZ,CAA2BD,CAA3B,CAAL,EAAoC;AACpC,gBAAID,YAAYC,CAAZ,MAAmBf,CAAvB,EAA0B;AAC1B,0CAA6B5B,CAA7B,UAAqC2C,CAArC;AACD;AACF;;AAED,eAAOhB,aAAaC,CAAb,EAAgBC,UAAhB,CAAP;AACD;;AAED,eAASgB,OAAT,CAAiBC,QAAjB,EAA2B;AACzB;AACA;AACAA,mBAAWA,SAASC,QAAT,GAAoBC,KAApB,CAA0B,GAA1B,CAAX;AACAF,iBAASG,KAAT;AACA;AACAH,mBAAWA,SAASI,IAAT,CAAc,GAAd,CAAX;AACAJ,mBAAWA,SAASE,KAAT,CAAe,GAAf,CAAX;AACAF,iBAASK,GAAT;AACA;;AAEA,eAAOL,SAASI,IAAT,CAAc,GAAd,EAAmBF,KAAnB,CAAyB,IAAzB,EAA+BE,IAA/B,CAAoC,YAApC,EACJE,OADI,CACI,qCADJ,EAC2CrE,cAAc,CAAd,GAAkB,gCAAlB,GAAqD,8BADhG,EAEJqE,OAFI,CAEI,wBAFJ,EAE8B,EAF9B,EAGJA,OAHI,CAGI,6BAHJ,EAGmC,EAHnC,EAIJA,OAJI,CAII,6BAJJ,EAImC,EAJnC,EAKJA,OALI,CAKI,+BALJ,EAKqC,EALrC,EAMJA,OANI,CAMI,wCANJ,EAM8C,EAN9C,CAAP;AAOD;;AAED,eAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,yCAAgCA,OAAOF,OAAP,CAAe,QAAf,EAAyB,UAASG,KAAT,EAAgB;AAAE,iBAAO,MAAMA,MAAMC,WAAN,EAAb;AAAmC,SAA9E,CAAhC;AACD;;AAED,UAAIC,YAAY,EAAhB;AACA,UAAIC,oBAAoB,EAAxB;AACA,UAAIC,uBAAuB,EAA3B;AACA,WAAK,IAAI3D,IAAI,CAAR,EAAWC,MAAMqB,OAAOnC,MAA7B,EAAqCa,IAAIC,GAAzC,EAA8CD,GAA9C,EAAmD;AACjD,YAAI8B,QAAQR,OAAOtB,CAAP,CAAZ;AACAyD,kBAAU1D,IAAV,aAA0BC,CAA1B,6BACU8B,MAAM8B,SAAN,CAAgBC,IAD1B,yBAESpB,eAAeX,MAAMG,IAArB,EAA2BjC,CAA3B,CAFT,wBAGUyC,eAAeX,MAAMM,KAArB,EAA4BpC,CAA5B,CAHV,0BAIYyC,eAAeX,MAAMO,OAArB,EAA8BrC,CAA9B,CAJZ;;AAOA,YAAIsD,SAASxB,MAAM8B,SAAN,CAAgBC,IAA7B;AACA,YAAI,CAACH,kBAAkBJ,MAAlB,CAAL,EAAgC;AAC9BI,4BAAkBJ,MAAlB,IAA4B,IAA5B;AACAK,+BAAqB5D,IAArB,qBACoBuD,MADpB,YACiCA,WAAW,WAAX,yBAA8CD,SAASC,MAAT,CAA9C,GAAoE,EADrG,qBAEKT,QAAQf,MAAM8B,SAAN,CAAgBb,QAAhB,EAAR,CAFL;AAKD;AACF;;AAED,UAAMe,yEAEJ,KAAKC,aAAL,KAAuB,IAAxB,GAAgC,KAAKA,aAAL,CAAmBC,gBAAnB,EAAhC,GAAwE,EAFnE,8BAKH,KAAKD,aAAL,KAAuB,IAAvB,IAA+B,OAAO,KAAKE,YAAZ,KAA6B,UAA7D,GACI,wBADJ,GAEI,UAPA,yBASM1C,UATN,mLAiBHkC,UAAUP,IAAV,CAAe,SAAf,CAjBG,mDAkBiCO,UAAUtE,MAlB3C,4NAyBPwE,qBAAqBT,IAArB,CAA0B,IAA1B,CAzBO,kCA8BL,KAAKa,aAAL,KAAuB,IAAvB,IAA+B,OAAO,KAAKG,aAAZ,KAA8B,UAA9D,qCACoC,KAAKlF,UAAL,KAAoB,CAApB,GAAwB,0BAAxB,GAAqD,uBADzF,uBAEe,KAAKA,UAAL,KAAoB,CAApB,GAAwB,0BAAxB,GAAqD,uBAFpE,CA9BM,uJAuCL,KAAK+E,aAAL,KAAuB,IAAvB,IAA+B,OAAO,KAAKE,YAAZ,KAA6B,UAA5D,+CAEKpB,QAAQ,KAAKoB,YAAL,CAAkBlB,QAAlB,EAAR,EACGK,OADH,CACW,iCADX,EAC8C,EAD9C,EAEGA,OAFH,CAEW,0BAFX,EAEuC,EAFvC,EAGGA,OAHH,CAGW,uBAHX,EAGoC,MAHpC,CAFL,UAOK,EA9CA,cA+CL,KAAKW,aAAL,KAAuB,IAAvB,IAA+B,OAAO,KAAKG,aAAZ,KAA8B,UAA7D,gDAEKrB,QAAQ,KAAKqB,aAAL,CAAmBnB,QAAnB,EAAR,EACGK,OADH,CACW,iCADX,EAC8C,EAD9C,EAEGA,OAFH,CAEW,0BAFX,EAEuC,EAFvC,EAGGA,OAHH,CAGW,uBAHX,EAGoC,MAHpC,CAFL,UAOK,EAtDA,aAuDLe,gBAAMpB,QAAN,EAvDK,YAwDLqB,kBAAQrB,QAAR,GAAmBK,OAAnB,CAA2B,YAA3B,EAAyC,QAAzC,CAxDK,YAyDLiB,gBAAQtB,QAAR,EAzDK,YA0DLuB,kBAAQvB,QAAR,EA1DK,YA2DLwB,eAAKxB,QAAL,EA3DD;AA4DA,aAAO,IAAIyB,QAAJ,CAAa,UAAb,EAAyBV,GAAzB,CAAP;AACD;;;;EAzTsCW,a;;kBAApB9F,W;;;AA4TrBA,YAAY+F,QAAZ,GAAuB;AACrB3F,aAAW,CADU;AAErBG,gBAAc,CAAC,EAAD,CAFO;AAGrBF,cAAY,CAHS;AAIrB2F,gBAAc,IAJO;AAKrBC,aAAW,KALU;AAMrBC,aAAW,IANU;AAOrBC,QAAM,QAPe;AAQrBC,WAAS,CARY;AASrBhB,iBAAe;AATM,CAAvB;;AAYApF,YAAYqG,aAAZ,GAA4BP,cAAIO,aAAhC","file":"rnn-time-step.js","sourcesContent":["import Matrix from './matrix';\nimport RandomMatrix from './matrix/random-matrix';\nimport Equation from './matrix/equation';\nimport RNN from './rnn';\nimport zeros from '../utilities/zeros';\nimport softmax from './matrix/softmax';\nimport {randomF} from '../utilities/random';\nimport sampleI from './matrix/sample-i';\nimport maxI from './matrix/max-i';\n\nexport default class RNNTimeStep extends RNN {\n  createInputMatrix() {\n    this.model.input = new RandomMatrix(this.inputSize, 1, 0.08);\n  }\n\n  createOutputMatrix() {\n    let model = this.model;\n    let outputSize = this.outputSize;\n    let lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n    //whd\n    model.outputConnector = new RandomMatrix(outputSize, lastHiddenSize, 0.08);\n    //bd\n    model.output = new Matrix(outputSize, 1);\n  }\n\n  bindEquation() {\n    let model = this.model;\n    let hiddenLayers = this.hiddenLayers;\n    let layers = model.hiddenLayers;\n    let equation = new Equation();\n    let outputs = [];\n    let equationConnection = model.equationConnections.length > 0\n      ? model.equationConnections[model.equationConnections.length - 1]\n      : this.initialLayerInputs\n      ;\n\n      // 0 index\n    let output = this.getEquation(equation, equation.input(model.input), equationConnection[0], layers[0]);\n    outputs.push(output);\n    // 1+ indices\n    for (let i = 1, max = hiddenLayers.length; i < max; i++) {\n      output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n      outputs.push(output);\n    }\n\n    model.equationConnections.push(outputs);\n    equation.add(equation.multiply(model.outputConnector, output), model.output);\n    model.equations.push(equation);\n  }\n\n  /**\n   *\n   * @param {Number[]} input\n   * @returns {number}\n   */\n  runInput(input) {\n    this.runs++;\n    let model = this.model;\n    let errorSum = 0;\n    let equation;\n    while (model.equations.length < input.length - 1) {\n      this.bindEquation();\n    }\n    const outputs = [];\n\n    if (this.inputSize === 1) {\n      for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n        // start and end tokens are zeros\n        equation = model.equations[inputIndex];\n\n        const current = input[inputIndex];\n        const next = input[inputIndex + 1];\n        const output = equation.runInput([current]);\n        for (let i = 0; i < output.weights.length; i++) {\n          const error = output.weights[i] - next;\n          // set gradients into log probabilities\n          errorSum += Math.abs(error);\n\n          // write gradients into log probabilities\n          output.deltas[i] = error;\n          outputs.push(output.weights);\n        }\n      }\n    } else {\n      for (let inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n        // start and end tokens are zeros\n        equation = model.equations[inputIndex];\n\n        const current = input[inputIndex];\n        const next = input[inputIndex + 1];\n        const output = equation.runInput(current);\n        for (let i = 0; i < output.weights.length; i++) {\n          const error = output.weights[i] - next[i];\n          // set gradients into log probabilities\n          errorSum += Math.abs(error);\n\n          // write gradients into log probabilities\n          output.deltas[i] = error;\n          outputs.push(output.weights);\n        }\n      }\n    }\n    //this.model.equations.length - 1;\n    this.totalCost = errorSum;\n    return errorSum;\n  }\n\n  runBackpropagate() {\n    for (let i = this.model.equations.length - 1; i > -1; i--) {\n      this.model.equations[i].runBackpropagate();\n    }\n  }\n\n\n  /**\n   *\n   * @param {Number[]|Number[][]} [input]\n   * @returns {Number[]|Number}\n   */\n  run(input = []) {\n    if (!this.isRunnable) return null;\n    const model = this.model;\n    while (model.equations.length < input.length) {\n      this.bindEquation();\n    }\n    let lastOutput;\n    if (this.inputSize === 1) {\n      for (let i = 0; i < input.length; i++) {\n        let outputMatrix = model.equations[i].runInput([input[i]]);\n        lastOutput = outputMatrix.weights;\n      }\n    } else {\n      for (let i = 0; i < input.length; i++) {\n        let outputMatrix = model.equations[i].runInput(input[i]);\n        lastOutput = outputMatrix.weights;\n      }\n    }\n    if (this.outputSize === 1) {\n      return lastOutput[0]\n    }\n    return lastOutput;\n  }\n\n  /**\n   *\n   * @returns {Function}\n   */\n  toFunction() {\n    let model = this.model;\n    let equations = this.model.equations;\n    const inputSize = this.inputSize;\n    debugger;\n    let equation = equations[1];\n    let states = equation.states;\n    let jsonString = JSON.stringify(this.toJSON());\n\n    function matrixOrigin(m, stateIndex) {\n      for (let i = 0, max = states.length; i < max; i++) {\n        let state = states[i];\n\n        if (i === stateIndex) {\n          let j = previousConnectionIndex(m);\n          switch (m) {\n            case state.left:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.right:\n              if (j > -1) {\n                return `typeof prevStates[${ j }] === 'object' ? prevStates[${ j }].product : new Matrix(${ m.rows }, ${ m.columns })`;\n              }\n            case state.product:\n              return `new Matrix(${ m.rows }, ${ m.columns })`;\n            default:\n              throw Error('unknown state');\n          }\n        }\n\n        if (m === state.product) return `states[${ i }].product`;\n        if (m === state.right) return `states[${ i }].right`;\n        if (m === state.left) return `states[${ i }].left`;\n      }\n    }\n\n    function previousConnectionIndex(m) {\n      const connection = model.equationConnections[0];\n      const states = equations[0].states;\n      for (let i = 0, max = states.length; i < max; i++) {\n        if (states[i].product === m) {\n          return i;\n        }\n      }\n      return connection.indexOf(m);\n    }\n\n    function matrixToString(m, stateIndex) {\n      if (!m || !m.rows || !m.columns) return 'null';\n\n      if (m === model.input) return `json.input`;\n      if (m === model.outputConnector) return `json.outputConnector`;\n      if (m === model.output) return `json.output`;\n\n      for (let i = 0, max = model.hiddenLayers.length; i < max; i++) {\n        let hiddenLayer = model.hiddenLayers[i];\n        for (let p in hiddenLayer) {\n          if (!hiddenLayer.hasOwnProperty(p)) continue;\n          if (hiddenLayer[p] !== m) continue;\n          return `json.hiddenLayers[${ i }].${ p }`;\n        }\n      }\n\n      return matrixOrigin(m, stateIndex);\n    }\n\n    function toInner(fnString) {\n      // crude, but should be sufficient for now\n      // function() { body }\n      fnString = fnString.toString().split('{');\n      fnString.shift();\n      // body }\n      fnString = fnString.join('{');\n      fnString = fnString.split('}');\n      fnString.pop();\n      // body\n\n      return fnString.join('}').split('\\n').join('\\n        ')\n        .replace('product.weights = _this.inputValue;', inputSize === 1 ? 'product.weights = [input[_i]];' : 'product.weights = input[_i];')\n        .replace('product.deltas[i] = 0;', '')\n        .replace('product.deltas[column] = 0;', '')\n        .replace('left.deltas[leftIndex] = 0;', '')\n        .replace('right.deltas[rightIndex] = 0;', '')\n        .replace('product.deltas = left.deltas.slice(0);', '');\n    }\n\n    function fileName(fnName) {\n      return `src/recurrent/matrix/${ fnName.replace(/[A-Z]/g, function(value) { return '-' + value.toLowerCase(); }) }.js`;\n    }\n\n    let statesRaw = [];\n    let usedFunctionNames = {};\n    let innerFunctionsSwitch = [];\n    for (let i = 0, max = states.length; i < max; i++) {\n      let state = states[i];\n      statesRaw.push(`states[${ i }] = {\n      name: '${ state.forwardFn.name }',\n      left: ${ matrixToString(state.left, i) },\n      right: ${ matrixToString(state.right, i) },\n      product: ${ matrixToString(state.product, i) }\n    }`);\n\n      let fnName = state.forwardFn.name;\n      if (!usedFunctionNames[fnName]) {\n        usedFunctionNames[fnName] = true;\n        innerFunctionsSwitch.push(\n          `        case '${ fnName }':${ fnName !== 'forwardFn' ? ` //compiled from ${ fileName(fnName) }` : '' }\n          ${ toInner(state.forwardFn.toString()) }\n          break;`\n        );\n      }\n    }\n\n    const src = `\n  if (typeof rawInput === 'undefined') rawInput = [];\n  ${ (this.dataFormatter !== null) ? this.dataFormatter.toFunctionString() : '' }\n  \n  var input = ${\n      (this.dataFormatter !== null && typeof this.formatDataIn === 'function')\n        ? 'formatDataIn(rawInput)'\n        : 'rawInput'\n      };\n  var json = ${ jsonString };\n  var output = [];\n  var states = [];\n  var prevStates;\n  var state;\n  for (let _i = 0; _i < input.length; _i++) {\n    prevStates = states;\n    states = [];\n    ${ statesRaw.join(';\\n    ') };\n    for (var stateIndex = 0, stateMax = ${ statesRaw.length }; stateIndex < stateMax; stateIndex++) {\n      state = states[stateIndex];\n      var product = state.product;\n      var left = state.left;\n      var right = state.right;\n      \n      switch (state.name) {\n${ innerFunctionsSwitch.join('\\n') }\n      }\n    }\n  }\n  ${\n    (this.dataFormatter !== null && typeof this.formatDataOut === 'function')\n      ? `return formatDataOut(input, ${ this.outputSize === 1 ? 'state.product.weights[0]' : 'state.product.weights' })`\n      : `return ${ this.outputSize === 1 ? 'state.product.weights[0]' : 'state.product.weights' }`\n  };\n  function Matrix(rows, columns) {\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = zeros(rows * columns);\n  }\n  ${ this.dataFormatter !== null && typeof this.formatDataIn === 'function'\n        ? `function formatDataIn(input, output) { ${\n          toInner(this.formatDataIn.toString())\n            .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n            .replace(/this[.]dataFormatter[.]/g, '')\n            .replace(/this[.]dataFormatter/g, 'true')\n          } }`\n        : '' }\n  ${ this.dataFormatter !== null && typeof this.formatDataOut === 'function'\n        ? `function formatDataOut(input, output) { ${\n          toInner(this.formatDataOut.toString())\n            .replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '')\n            .replace(/this[.]dataFormatter[.]/g, '')\n            .replace(/this[.]dataFormatter/g, 'true')\n          } }`\n        : '' }\n  ${ zeros.toString() }\n  ${ softmax.toString().replace('_2.default', 'Matrix') }\n  ${ randomF.toString() }\n  ${ sampleI.toString() }\n  ${ maxI.toString() }`\n    return new Function('rawInput', src);\n  }\n}\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: 0.01,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  dataFormatter: null\n};\n\nRNNTimeStep.trainDefaults = RNN.trainDefaults;"]}